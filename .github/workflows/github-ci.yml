# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-terraform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Check the source
        run: | 
          ls -al

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration.
      - name: Run a one-line script
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd infrastrure_terraform
          terraform init -input=false
      # Generate Terraform Plan and store in .tfplan file
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd infrastrure_terraform 
          terraform plan -out terraform.tfplan

      # commit Terraform plan if running on 'main' branch
      # commit is made to the 'terraform-plan' branch
      - name: Commit Terraform Plan for Approval
        if: github.ref == 'refs/heads/main'
        # run: |
        #   cd infrastrure_terraform 
        #   git add terraform.tfplan 
        uses: peter-evans/create-pull-request@v4
        with:
          add-paths: |
            infrastrure_terraform/terraform.tfplan
          commit-message: 'Terraform Plan'
          branch: 'terraform-plan'
          base: 'main'
          token: ${{ secrets.TOKEN_GITHUB }}

      # - name: Terraform Apply
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #   run: |
      #     cd infrastrure_terraform
      #     terraform apply -var-file="dev.tfvars" -auto-approve -input=false